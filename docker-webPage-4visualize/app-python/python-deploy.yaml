apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: flask-python
  labels:
    app: flask-python
    name: flask-python
    visualize: "true"
#  namespace: tfg
spec:
  replicas: 2
  selector:
    matchLabels:
      app: flask-python  
  template:
    metadata:
      labels:
        app: flask-python
        name: flask-python
        visualize: "true"         
    spec:
      containers:
        - name: flask-python
          image: acrego/app-python-arm32:1.0
          ports:
            - containerPort: 5000
              name: http
              protocol: TCP
          imagePullPolicy: Always
          env:
          - name: MY_NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: MY_NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: MY_NODE_IP
            valueFrom:
              fieldRef:
                fieldPath: status.hostIP
          - name: MY_POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: MY_POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: MY_POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: MY_POD_SERVICE_ACCOUNT
            valueFrom:
              fieldRef:
                fieldPath: spec.serviceAccountName
        - name: liveness
          image: k8s.gcr.io/busybox
          args:
          - /bin/sh
          - -c
          - touch /tmp/healthy; sleep 30; rm -rf /tmp/healthy; sleep 600
          livenessProbe:
            exec:
              command:
              - cat
              - /tmp/healthy
            initialDelaySeconds: 5
            periodSeconds: 5        
      # nodeSelector:
      #   tfg: "worker00"
